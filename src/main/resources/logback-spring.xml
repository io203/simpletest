<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true"> <!-- default 1 minutes -->


    <property name="projectName" value="simpletest" />
    <property name="logType" value="waslog" />
    
    <!-- application.properties  :  logstash.destination -->
    <springProperty name="destination" source="logstash.destination" defaultValue="http://1.1.1.1"/>
        
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
            <!--
                %d{yyyy-MM-dd HH:mm:ss} : 년월일 시분초
                %thread : thread name 
                %-5level : log level , -5는 출력 고정폭 값
                %logger{length} :Logger name의 이름, {length}는 자리수
                %msg : log message %message은 alias
                %n : 줄바꿈
                
                org.fusesource.jansi:jansi:1.8 가 필요함.
                        Linux ,Mac OS X 기본적으로 지원함
                        <withJansi>true</withJansi>설정후 사용해야함
                %highlight : log level 별로 color가 다르게 나옴
                -->
                 %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg %n
            </Pattern>
        </layout>
    </appender>
    

    <appender name="logstash"
        class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <destination>${destination}:5001</destination>

        <!-- encoder is required -->
        <encoder
            class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>
                        {
                        "date":"%date",
                        "level": "%level",
                        "logType": "${logType}",
                        "project": "${projectName}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%logger{36}",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>

    </appender>
    <logger name="com" level="INFO" additivity="false">
        <appender-ref ref="stdout" />
        <appender-ref ref="logstash" />
         
        
    </logger>


    <root level="INFO">
        <appender-ref ref="stdout" />
        <appender-ref ref="logstash" />

    </root>

</configuration>